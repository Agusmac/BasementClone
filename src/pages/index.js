import Head from 'next/head'
import Hero from '../../components/hero/Hero'
import Navbar from '../../components/hero/Navbar'
import { useEffect, useRef, useState } from 'react'
import Marquee from '../../components/Marquee'
import Slider from '../../components/Slider'
import PinnedText from '../../components/pinned/PinnedText'
// import AwardsDiv from '../../components/awards/AwardsDiv'
// import LastSlider from '../../components/LastSlider'
// import Footer from '../../components/Footer'
import Loader from '../../components/Loader'
import dynamic from 'next/dynamic'
import Followers from '../../components/Followers'
 
const AwardsDiv = dynamic(() => import('../../components/awards/AwardsDiv'), {
  loading: () => <p>Loading...</p>,
})
const LastSlider = dynamic(() => import('../../components/LastSlider'), {
  loading: () => <p>Loading...</p>,
})
const Footer = dynamic(() => import('../../components/Footer'), {
  loading: () => <p>Loading...</p>,
})

export default function Home() {

  const darkDivRef = useRef()
  // const testRef = useRef()
  const [awardVisible, setAwardVisible] = useState(false)
  const [currentAward, setCurrentAward] = useState(1)
  const [heroModelReady, setHeroModelReady] = useState(false)

  useEffect(() => {
    //  probably should check for window size and remove this if mobile
    (async () => {
      const LocomotiveScroll = (await import('locomotive-scroll')).default
      const locomotiveScroll = new LocomotiveScroll();
    })()
  }, [])


  return (
    <>
      <Head>
        <title>Basement By Agus Mac Rae</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

        <Followers currentAward={currentAward} awardVisible={awardVisible}/>
        <Loader heroModelReady={heroModelReady} />
        {/* } */}

        <Navbar />
        <Hero darkDivRef={darkDivRef} setHeroModelReady={setHeroModelReady} />

        <div className='bg-black relative pt-2 z-20'>
          <div ref={darkDivRef} className='pt-16 sm:pt-[114px] bg-black'>
            <p className='text-white uppercase mx-auto text-center text-xs sm:text-xl font-medium px-4'>
              Sometimes size doesn&apos;t matter. we work for BIG &
              <br className='sm:hidden' /> SMALL NON-stoppable visionarIES.
              <br /> There&apos;s love for them all.
            </p>
            <Marquee />
            <Slider />
          </div>
          <div className='relative sm:-top-80 md:-top-96 xl:-top-64 '>
            <PinnedText />
          </div>
        </div>
        <AwardsDiv setAwardVisible={setAwardVisible} setCurrentAward={setCurrentAward} />
        <LastSlider />
        <Footer />
      </main>
    </>
  )
}